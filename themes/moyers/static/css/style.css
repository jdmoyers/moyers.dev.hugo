.a11y-sr-only,
.a11y-kb-only {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.a11y-kb-only:active,
.a11y-kb-only:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: absolute;
  top: 5px;
  left: 5px;
  width: auto;
  color: #ff5e24;
  background-color: #f9fff9;
  font-weight: bold;
  display: inline-block;
  padding: 5px;
}

html {
  box-sizing: border-box;
}

html.locked {
  overflow-y: hidden;
  height: 100vh;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  padding: 0;
  margin: 0;
  background-color: #495659;
  background-image: url("/img/background.jpg");
  background-size: cover;
  background-attachment: fixed;
}

a {
  color: #0e7f81;
}

a:hover {
  background-color: #0e7f81;
  color: #f9fff9;
}

img {
  max-width: 100%;
}

.wrapper {
  margin: 10px auto;
  max-width: calc(100vw - 20px);
  background-color: #f9fff9;
  display: grid;
  grid-template-columns: 1fr;
}

@media screen and (min-width: 1024px) {
  .wrapper {
    margin: 45px auto;
    max-width: calc(100vw - 40px);
    grid-template-columns: 30% 70%;
    grid-template-rows: -webkit-min-content 1fr -webkit-min-content;
    grid-template-rows: min-content 1fr min-content;
  }
}

@media screen and (min-width: 1320px) {
  .wrapper {
    margin: 60px auto;
    max-width: 1300px;
  }
}

@media screen and (min-width: 1024px) {
  .main {
    grid-row-start: 1;
    grid-row-end: 4;
    grid-column-start: 2;
    grid-column-end: 2;
  }
}

.main-content {
  padding: 10%;
}

html {
  font-size: 19px;
}

body {
  font-family: 'Barlow', sans-serif;
  font-weight: 400;
  line-height: 1.45;
}

p {
  margin-bottom: 1.25em;
}

h1,
h2,
h3,
h4,
h5 {
  margin: 2.75rem 0 1rem;
  font-family: 'Barlow', sans-serif;
  font-weight: 400;
  line-height: 1.15;
}

h1 {
  margin-top: 0;
  font-size: 4.209em;
}

h2 {
  font-size: 3.157em;
}

h3 {
  font-size: 2.369em;
}

h4 {
  font-size: 1.777em;
}

h5 {
  font-size: 1.333em;
}

small,
.text_small {
  font-size: 0.75em;
}

.header {
  background-color: #27272a;
  padding: 0.5rem;
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: -webkit-min-content -webkit-max-content;
  grid-template-columns: min-content max-content;
}

@media screen and (min-width: 1024px) {
  .header {
    display: block;
    padding: 15% 15% 1rem 15%;
  }
}

.logo {
  text-align: center;
  width: 222px;
  grid-column-start: 2;
  padding-left: 15px;
}

@media screen and (min-width: 1024px) {
  .logo {
    max-width: 100%;
    width: auto;
  }
}

.logo-svg {
  width: 140px;
  height: auto;
  position: absolute;
  left: 0;
  bottom: 15px;
}

@media screen and (min-width: 1024px) {
  .logo-svg {
    position: relative;
    width: auto;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
  }
}

.logo-svg_text {
  font-size: 50px;
  fill: #f9fff9;
  text-anchor: middle;
  font-family: 'Barlow', sans-serif;
  font-weight: 200;
  transition: all ease-in-out 75ms;
}

.logo-svg_text--primary {
  display: none;
}

@media screen and (min-width: 1024px) {
  .logo-svg_text--primary {
    display: block;
  }
}

.logo-link {
  height: 44px;
  display: block;
  position: relative;
}

@media screen and (min-width: 1024px) {
  .logo-link {
    height: 125px;
    width: 125px;
    margin: 0 auto;
  }
}

.logo-link:hover {
  background-color: transparent;
}

.logo-link:hover .logo-svg_text--primary {
  fill: #0e7f81;
}

.logo-link:hover .logo-svg_text--secondary {
  fill: #0e7f81;
}

@media screen and (min-width: 1024px) {
  .logo-link:hover .logo-svg_text--secondary {
    fill: #ff5e24;
  }
}

.nav {
  grid-column-start: 1;
  grid-row-start: 1;
}

.nav-list {
  margin: 0.5rem 0;
  padding: 0;
  list-style: none;
}

@media screen and (min-width: 1024px) {
  .nav-list {
    margin: 15% 0 0 0;
  }
}

.nav-item {
  padding: 0.75rem 0.25rem;
  margin: 0;
  border-top: 1px solid rgba(249, 255, 249, 0.25);
}

@media screen and (min-width: 1024px) {
  .nav-item:first-child {
    border-top: 0;
  }
}

.nav-link {
  color: #ff5e24;
  text-decoration: none;
}

.nav-toggle_svg path {
  fill: #f9fff9;
}

.nav-toggle {
  width: 44px;
  height: 44px;
  background-color: transparent;
  border: 0;
  cursor: pointer;
}

.nav-toggle:hover .nav-toggle_svg path {
  fill: #ff5e24;
}

@media screen and (min-width: 1024px) {
  .nav-toggle {
    display: none;
  }
}

.nav-panel {
  position: absolute;
  width: 100vw;
  height: 100vh;
  left: 0;
  top: 0;
  padding: calc(10px + 0.5rem);
  z-index: 2;
  background-color: #27272a;
  will-change: transform;
  transform: translateX(-100%);
  transition: transform ease-in-out 200ms;
  overflow-y: scroll;
}

@media screen and (min-width: 1024px) {
  .nav-panel {
    height: auto;
    width: auto;
    position: relative;
    overflow: auto;
    transform: translateX(0);
  }
}

.nav-panel.open {
  transform: translateX(0);
}

.sidebar {
  background-color: #27272a;
  padding: 1rem 15% 15% 15%;
  color: #f9fff9;
  grid-row-start: 3;
}

@media screen and (min-width: 1024px) {
  .sidebar {
    grid-row-start: 2;
  }
}

.sidebar a {
  color: #ff5e24;
}

.footer {
  background-color: #27272a;
  color: #f9fff9;
  padding: 5% 15%;
  text-align: left;
}

.footer a {
  color: #ff5e24;
}

.footer a:hover {
  color: #f9fff9;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
