.a11y-sr-only,
.a11y-kb-only {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.a11y-kb-only:active,
.a11y-kb-only:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: absolute;
  top: 5px;
  left: 5px;
  width: auto;
  color: #ff5e24;
  background-color: #f9fff9;
  font-weight: bold;
  display: inline-block;
  padding: 5px;
}

html {
  box-sizing: border-box;
}

html.locked {
  overflow-y: hidden;
  height: 100vh;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  padding: 0;
  margin: 0;
  background-color: #495659;
  background-image: url("/img/background.jpg");
  background-size: cover;
  background-attachment: fixed;
}

a {
  color: #0e7f81;
}

a:hover {
  background-color: #0e7f81;
  color: #f9fff9;
}

img {
  max-width: 100%;
}

.wrapper {
  margin: 10px auto;
  max-width: calc(100vw - 20px);
  background-color: #f9fff9;
  display: grid;
  grid-template-columns: 1fr;
}

@media screen and (min-width: 1024px) {
  .wrapper {
    margin: 45px auto;
    max-width: calc(100vw - 40px);
    grid-template-columns: 30% 70%;
    grid-template-rows: -webkit-min-content 1fr -webkit-min-content;
    grid-template-rows: min-content 1fr min-content;
  }
}

@media screen and (min-width: 1320px) {
  .wrapper {
    margin: 60px auto;
    max-width: 1300px;
  }
}

@media screen and (min-width: 1024px) {
  .main {
    grid-row-start: 1;
    grid-row-end: 4;
    grid-column-start: 2;
    grid-column-end: 2;
  }
}

.main-content {
  padding: 10%;
}

html {
  font-size: 19px;
}

body {
  font-family: 'Barlow', sans-serif;
  font-weight: 400;
  line-height: 1.45;
}

p {
  margin-bottom: 1.25em;
}

h1,
h2,
h3,
h4,
h5 {
  margin: 2.75rem 0 1rem;
  font-family: 'Barlow', sans-serif;
  font-weight: 400;
  line-height: 1.15;
}

h1 {
  margin-top: 0;
  font-size: 3.156em;
}

@media screen and (min-width: 1024px) {
  h1 {
    font-size: 4.209em;
  }
}

h2 {
  font-size: 2.367em;
}

@media screen and (min-width: 1024px) {
  h2 {
    font-size: 3.157em;
  }
}

h3 {
  font-size: 1.776em;
}

@media screen and (min-width: 1024px) {
  h3 {
    font-size: 2.369em;
  }
}

h4 {
  font-size: 1.332em;
}

@media screen and (min-width: 1024px) {
  h4 {
    font-size: 1.777em;
  }
}

h5 {
  font-size: 1.333em;
}

@media screen and (min-width: 1024px) {
  h5 {
    font-size: 1em;
  }
}

small,
.text_small {
  font-size: 0.75em;
}

.categories-heading {
  display: inline;
}

.header {
  background-color: #27272a;
  padding: 0.5rem;
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: -webkit-min-content -webkit-max-content;
  grid-template-columns: min-content max-content;
}

@media screen and (min-width: 1024px) {
  .header {
    display: block;
    padding: 15% 10% 1rem 10%;
  }
}

.logo {
  text-align: center;
  width: 222px;
  grid-column-start: 2;
  padding-left: 15px;
}

@media screen and (min-width: 1024px) {
  .logo {
    max-width: 100%;
    width: auto;
  }
}

.logo-svg {
  width: 140px;
  height: auto;
  position: absolute;
  left: 0;
  bottom: 15px;
}

@media screen and (min-width: 1024px) {
  .logo-svg {
    position: relative;
    width: auto;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
  }
}

.logo-svg_text {
  font-size: 50px;
  fill: #f9fff9;
  text-anchor: middle;
  font-family: 'Barlow', sans-serif;
  font-weight: 200;
  transition: all ease-in-out 75ms;
}

.logo-svg_text--primary {
  display: none;
}

@media screen and (min-width: 1024px) {
  .logo-svg_text--primary {
    display: block;
  }
}

.logo-link {
  height: 44px;
  display: block;
  position: relative;
}

@media screen and (min-width: 1024px) {
  .logo-link {
    height: 125px;
    width: 125px;
    margin: 0 auto;
  }
}

.logo-link:hover {
  background-color: transparent;
}

.logo-link:hover .logo-svg_text--primary {
  fill: #0e7f81;
}

.logo-link:hover .logo-svg_text--secondary {
  fill: #0e7f81;
}

@media screen and (min-width: 1024px) {
  .logo-link:hover .logo-svg_text--secondary {
    fill: #ff5e24;
  }
}

.nav {
  grid-column-start: 1;
  grid-row-start: 1;
}

.nav-heading {
  color: #f9fff9;
  margin-top: 1rem;
  font-size: 1.2rem;
}

.nav-list {
  margin: 0.5rem 0;
  padding: 0;
  list-style: none;
}

.nav-list--tags {
  border-top: 1px solid rgba(249, 255, 249, 0.25);
  padding: 0.5rem;
}

.nav-item {
  padding: 0.75rem 0.25rem;
  margin: 0;
  border-top: 1px solid rgba(249, 255, 249, 0.25);
}

@media screen and (min-width: 1024px) {
  .nav-item {
    padding: 0.5rem;
  }
}

.nav-item--tags {
  display: inline-block;
  border-top: 0;
  padding: 0;
  margin: 0 0.25rem 0 0;
}

.nav-link {
  color: #ff5e24;
  text-decoration: none;
}

.nav-link--tags {
  color: #ff5e24;
  padding: 0.125rem 0.25rem;
  display: block;
  font-size: 0.8rem;
  border: 1px solid #0e7f81;
}

.nav-link--tags:hover {
  background-color: #0e7f81;
  color: #f9fff9;
  border: 1px solid #0e7f81;
}

.nav-toggle_svg path {
  fill: #f9fff9;
}

.nav-toggle {
  width: 44px;
  height: 44px;
  background-color: transparent;
  border: 0;
  cursor: pointer;
}

.nav-toggle:hover .nav-toggle_svg path {
  fill: #ff5e24;
}

@media screen and (min-width: 1024px) {
  .nav-toggle {
    display: none;
  }
}

.nav-panel {
  position: absolute;
  width: 100vw;
  height: 100vh;
  left: 0;
  top: 0;
  padding: calc(10px + 0.5rem);
  z-index: 2;
  background-color: #27272a;
  will-change: transform;
  transform: translateX(-100%);
  transition: transform ease-in-out 200ms;
  overflow-y: scroll;
}

@media screen and (min-width: 1024px) {
  .nav-panel {
    height: auto;
    width: auto;
    position: relative;
    overflow: auto;
    transform: translateX(0);
  }
}

.nav-panel.open {
  transform: translateX(0);
}

.sidebar {
  background-color: #27272a;
  padding: 1rem 15% 0;
  color: #f9fff9;
  grid-row-start: 3;
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-end;
}

@media screen and (min-width: 1024px) {
  .sidebar {
    grid-row-start: 2;
  }
}

.sidebar a {
  color: #ff5e24;
}

.social-list {
  margin: 0 0 0.25rem;
  padding: 0 0 0.25rem;
  list-style: none;
  text-align: center;
  border-bottom: 1px solid rgba(249, 255, 249, 0.25);
}

.social-item {
  padding: 0;
  display: inline-block;
}

.social-link {
  padding: 14px;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  border-radius: 50%;
}

.social-link:hover path {
  fill: #f9fff9;
}

.social-icon {
  height: 30px;
}

.post-footer {
  font-size: 0.75rem;
  border-top: 1px solid #495659;
  margin: 1rem 0;
  padding: 0.5rem 0;
}

.tags {
  border-top: 1px solid #495659;
  margin: 0.5rem 0;
  padding: 0.5rem 0;
  display: grid;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  font-size: 0.8rem;
}

.tags-heading {
  display: inline-block;
  border-top: 0;
  padding: 0.375rem 0;
  margin: 0.375rem 0.25rem 0.375rem 0;
  white-space: nowrap;
}

.tags-list {
  border-top: 1px solid rgba(249, 255, 249, 0.25);
  padding: 0.5rem;
  list-style: none;
  margin: 0;
}

.tags-item {
  display: inline-block;
  border-top: 0;
  padding: 0;
  margin: 0 0.25rem 0 0;
}

.tags-link {
  color: #0e7f81;
  padding: 0.125rem 0.25rem;
  display: block;
  border: 1px solid #0e7f81;
}

.tags-link:hover {
  background-color: #0e7f81;
  color: #f9fff9;
  border: 1px solid #0e7f81;
}

.tags-icon {
  width: 1.5rem;
  height: 1.5rem;
}

.footer {
  background-color: #27272a;
  color: #f9fff9;
  padding: 5% 15%;
  text-align: left;
}

.footer a {
  color: #ff5e24;
}

.footer a:hover {
  color: #f9fff9;
}

.footer-credits {
  display: block;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
